{"entry":{"name":"ofAbstractImage","filename":"ofAbstractImage.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/types/ofAbstractImage.markdown","path":"/documentation/types/ofAbstractImage","route":"/documentation/types/ofAbstractImage.markdown","dir":"../ofSite/documentation/types","ext":"markdown","type":"page","id":445,"parent":439,"breadcrumbs":[439,1],"siblings":[],"translations":{}},"description":{"short":null,"full":"<h1></h1>\n"},"config":{"visible":"True","advanced":"True","istemplated":"False","extends":"ofBaseDraws, ofBaseHasTexture"},"methods":[{"syntax":"~ofAbstractImage()","name":"~ofAbstractImage","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Destroy the ofAbstractImage.</p>\n","desc":""},{}],"document":"<p>#class ofAbstractImage</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: True</em>\n<em>istemplated: False</em>\n<em>extends: ofBaseDraws, ofBaseHasTexture</em>\n--&gt;</p>\n<p>##InlineDescription</p>\n<p>An abstract class representing an image.</p>\n<p>This empty class primarily exists to allow templated subclasses of different\ntypes to be stored as raw or shared pointers in collections such as\nstd::vector.</p>\n<p>Example:\n\\code{.cpp}</p>\n<p>std::vector&lt;ofAbstractImage*&gt; imageProviders;</p>\n<p>ofImage image;\nofFloatImage floatImage;\nofShortImage shortImage;</p>\n<p>// ...</p>\n<p>imageProviders.push_back(&amp;image);\nimageProviders.push_back(&amp;floatImage);\nimageProviders.push_back(&amp;shortImage);</p>\n<p>\\endcode</p>\n<p>##Description</p>\n<p>##Methods</p>\n<h3>~ofAbstractImage()</h3>\n<p>&lt;!--\n<em>syntax: ~ofAbstractImage()</em>\n<em>name: ~ofAbstractImage</em>\n_returns: _\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Destroy the ofAbstractImage.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>##Variables</p>\n","raw":"#class ofAbstractImage\n\n\n<!--\n_visible: True_\n_advanced: True_\n_istemplated: False_\n_extends: ofBaseDraws, ofBaseHasTexture_\n-->\n\n##InlineDescription\n\nAn abstract class representing an image.\n\nThis empty class primarily exists to allow templated subclasses of different\ntypes to be stored as raw or shared pointers in collections such as\nstd::vector.\n\nExample:\n\\code{.cpp}\n\nstd::vector<ofAbstractImage*> imageProviders;\n\nofImage image;\nofFloatImage floatImage;\nofShortImage shortImage;\n\n// ...\n\nimageProviders.push_back(&image);\nimageProviders.push_back(&floatImage);\nimageProviders.push_back(&shortImage);\n\n\\endcode\n\n\n\n\n\n##Description\n\n\n\n\n\n##Methods\n\n\n\n### ~ofAbstractImage()\n\n<!--\n_syntax: ~ofAbstractImage()_\n_name: ~ofAbstractImage_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDestroy the ofAbstractImage.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n##Variables\n\n\n\n","type":"page"}