{"entry":{"name":"gtx_matrix_interpolation_functions","filename":"gtx_matrix_interpolation_functions.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/glm/gtx_matrix_interpolation_functions.markdown","path":"/documentation/glm/gtx_matrix_interpolation_functions","route":"/documentation/glm/gtx_matrix_interpolation_functions.markdown","dir":"../ofSite/documentation/glm","ext":"markdown","type":"page","id":331,"parent":268,"breadcrumbs":[268,1],"siblings":[],"translations":{}},"description":{},"methods":[null,{"syntax":"glm::axisAngle(&mat = P, &axis = P, &angle)","name":"glm::axisAngle","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span>mat<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span>axis<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> T <span class=\"token operator\">&amp;</span>angle","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Get the axis and angle of the rotation from a matrix.\nFrom GLM_GTX_matrix_interpolation extension.</p>\n","desc":""},{"syntax":"glm::axisAngleMatrix(&axis = P, angle)","name":"glm::axisAngleMatrix","returns":"glm::mat4","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span>axis<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> T angle","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Build a matrix from axis and angle.\nFrom GLM_GTX_matrix_interpolation extension.</p>\n","desc":""},{"syntax":"glm::extractMatrixRotation(&mat = P)","name":"glm::extractMatrixRotation","returns":"glm::mat4","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span>mat<span class=\"token operator\">=</span>P","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Extracts the rotation part of a matrix.\nFrom GLM_GTX_matrix_interpolation extension.</p>\n","desc":""},{"syntax":"glm::interpolate(&m1 = P, &m2 = P, delta)","name":"glm::interpolate","returns":"glm::mat4","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span>m1<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span>m2<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> T delta","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Build a interpolation of 4 * 4 matrixes.\nFrom GLM_GTX_matrix_interpolation extension.\nWarning! works only with rotation and/or translation matrixes, scale will generate unexpected results.</p>\n","desc":""},{}],"document":"<p>#functions</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>##Description</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void glm::axisAngle(&amp;mat = P, &amp;axis = P, &amp;angle)</p>\n<p>&lt;!--\n<em>syntax: glm::axisAngle(&amp;mat = P, &amp;axis = P, &amp;angle)</em>\n<em>name: glm::axisAngle</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const glm::mat4 &amp;mat=P, glm::vec3 &amp;axis=P, T &amp;angle</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Get the axis and angle of the rotation from a matrix.\nFrom GLM_GTX_matrix_interpolation extension.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###glm::mat4 glm::axisAngleMatrix(&amp;axis = P, angle)</p>\n<p>&lt;!--\n<em>syntax: glm::axisAngleMatrix(&amp;axis = P, angle)</em>\n<em>name: glm::axisAngleMatrix</em>\n<em>returns: glm::mat4</em>\n_returns_description: _\n<em>parameters: const glm::vec3 &amp;axis=P, const T angle</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Build a matrix from axis and angle.\nFrom GLM_GTX_matrix_interpolation extension.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###glm::mat4 glm::extractMatrixRotation(&amp;mat = P)</p>\n<p>&lt;!--\n<em>syntax: glm::extractMatrixRotation(&amp;mat = P)</em>\n<em>name: glm::extractMatrixRotation</em>\n<em>returns: glm::mat4</em>\n_returns_description: _\n<em>parameters: const glm::mat4 &amp;mat=P</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Extracts the rotation part of a matrix.\nFrom GLM_GTX_matrix_interpolation extension.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###glm::mat4 glm::interpolate(&amp;m1 = P, &amp;m2 = P, delta)</p>\n<p>&lt;!--\n<em>syntax: glm::interpolate(&amp;m1 = P, &amp;m2 = P, delta)</em>\n<em>name: glm::interpolate</em>\n<em>returns: glm::mat4</em>\n_returns_description: _\n<em>parameters: const glm::mat4 &amp;m1=P, const glm::mat4 &amp;m2=P, const T delta</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Build a interpolation of 4 * 4 matrixes.\nFrom GLM_GTX_matrix_interpolation extension.\nWarning! works only with rotation and/or translation matrixes, scale will generate unexpected results.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#functions\n\n\n<!--\n_visible: True_\n_advanced: False_\n-->\n\n##Description\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void glm::axisAngle(&mat = P, &axis = P, &angle)\n\n<!--\n_syntax: glm::axisAngle(&mat = P, &axis = P, &angle)_\n_name: glm::axisAngle_\n_returns: void_\n_returns_description: _\n_parameters: const glm::mat4 &mat=P, glm::vec3 &axis=P, T &angle_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nGet the axis and angle of the rotation from a matrix.\nFrom GLM_GTX_matrix_interpolation extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat4 glm::axisAngleMatrix(&axis = P, angle)\n\n<!--\n_syntax: glm::axisAngleMatrix(&axis = P, angle)_\n_name: glm::axisAngleMatrix_\n_returns: glm::mat4_\n_returns_description: _\n_parameters: const glm::vec3 &axis=P, const T angle_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuild a matrix from axis and angle.\nFrom GLM_GTX_matrix_interpolation extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat4 glm::extractMatrixRotation(&mat = P)\n\n<!--\n_syntax: glm::extractMatrixRotation(&mat = P)_\n_name: glm::extractMatrixRotation_\n_returns: glm::mat4_\n_returns_description: _\n_parameters: const glm::mat4 &mat=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nExtracts the rotation part of a matrix.\nFrom GLM_GTX_matrix_interpolation extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat4 glm::interpolate(&m1 = P, &m2 = P, delta)\n\n<!--\n_syntax: glm::interpolate(&m1 = P, &m2 = P, delta)_\n_name: glm::interpolate_\n_returns: glm::mat4_\n_returns_description: _\n_parameters: const glm::mat4 &m1=P, const glm::mat4 &m2=P, const T delta_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuild a interpolation of 4 * 4 matrixes.\nFrom GLM_GTX_matrix_interpolation extension.\nWarning! works only with rotation and/or translation matrixes, scale will generate unexpected results.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page"}