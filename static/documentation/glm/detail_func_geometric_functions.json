{"entry":{"name":"detail_func_geometric_functions","filename":"detail_func_geometric_functions.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/glm/detail_func_geometric_functions.markdown","path":"/documentation/glm/detail_func_geometric_functions","route":"/documentation/glm/detail_func_geometric_functions.markdown","dir":"../ofSite/documentation/glm","ext":"markdown","type":"page","id":271,"parent":268,"breadcrumbs":[268,1],"siblings":[],"translations":{}},"description":{},"methods":[null,{"syntax":"glm::cross(&x = P, &y = P)","name":"glm::cross","returns":"glm::vec3","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span>x<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span>y<span class=\"token operator\">=</span>P","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","desc":""},{"desc":""},{"desc":""},{"desc":""},{"desc":""},{"desc":""},{"syntax":"glm::reflect(&I, &N)","name":"glm::reflect","returns":"genType","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>I<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>N","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","desc":""},{"desc":""},{}],"document":"<p>#functions</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>##Description</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###glm::vec3 glm::cross(&amp;x = P, &amp;y = P)</p>\n<p>&lt;!--\n<em>syntax: glm::cross(&amp;x = P, &amp;y = P)</em>\n<em>name: glm::cross</em>\n<em>returns: glm::vec3</em>\n_returns_description: _\n<em>parameters: const glm::vec3 &amp;x=P, const glm::vec3 &amp;y=P</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Returns the cross product of x and y.</p>\n<p><strong>Type parameters:</strong></p>\n<p>valType Floating-point scalar types.</p>\n<p><strong>See also</strong>: &lt;a href=&quot;http://www.opengl.org/sdk/docs/manglsl/xhtml/cross.xml&quot;&gt;GLSL cross man page&lt;/a&gt;</p>\n<p><strong>See also</strong>: &lt;a href=&quot;http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf&quot;&gt;GLSL 4.20.8 specification, section 8.5 Geometric Functions&lt;/a&gt;</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###T glm::distance(T, &amp;p0 = P, T, &amp;p1 = P)</p>\n<p>&lt;!--\n<em>syntax: glm::distance(T, &amp;p0 = P, T, &amp;p1 = P)</em>\n<em>name: glm::distance</em>\n<em>returns: T</em>\n_returns_description: _\n<em>parameters: const vecType&lt; T, P &gt; &amp;p0=P, const vecType&lt; T, P &gt; &amp;p1=P</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Returns the distance betwwen p0 and p1, i.e., length(p0 - p1).</p>\n<p><strong>Type parameters:</strong></p>\n<p>genType Floating-point vector types.</p>\n<p><strong>See also</strong>: &lt;a href=&quot;http://www.opengl.org/sdk/docs/manglsl/xhtml/distance.xml&quot;&gt;GLSL distance man page&lt;/a&gt;</p>\n<p><strong>See also</strong>: &lt;a href=&quot;http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf&quot;&gt;GLSL 4.20.8 specification, section 8.5 Geometric Functions&lt;/a&gt;</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###T glm::dot(T, &amp;x = P, T, &amp;y = P)</p>\n<p>&lt;!--\n<em>syntax: glm::dot(T, &amp;x = P, T, &amp;y = P)</em>\n<em>name: glm::dot</em>\n<em>returns: T</em>\n_returns_description: _\n<em>parameters: const vecType&lt; T, P &gt; &amp;x=P, const vecType&lt; T, P &gt; &amp;y=P</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Returns the dot product of x and y, i.e., result = x * y.</p>\n<p><strong>Type parameters:</strong></p>\n<p>genType Floating-point vector types.</p>\n<p><strong>See also</strong>: &lt;a href=&quot;http://www.opengl.org/sdk/docs/manglsl/xhtml/dot.xml&quot;&gt;GLSL dot man page&lt;/a&gt;</p>\n<p><strong>See also</strong>: &lt;a href=&quot;http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf&quot;&gt;GLSL 4.20.8 specification, section 8.5 Geometric Functions&lt;/a&gt;</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###vecType&lt; T, P &gt; glm::faceforward(T, &amp;N = P, T, &amp;I = P, T, &amp;Nref = P)</p>\n<p>&lt;!--\n<em>syntax: glm::faceforward(T, &amp;N = P, T, &amp;I = P, T, &amp;Nref = P)</em>\n<em>name: glm::faceforward</em>\n<em>returns: vecType&lt; T, P &gt;</em>\n_returns_description: _\n<em>parameters: const vecType&lt; T, P &gt; &amp;N=P, const vecType&lt; T, P &gt; &amp;I=P, const vecType&lt; T, P &gt; &amp;Nref=P</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>If dot(Nref, I) &lt; 0.0, return N, otherwise, return -N.</p>\n<p><strong>Type parameters:</strong></p>\n<p>genType Floating-point vector types.</p>\n<p><strong>See also</strong>: &lt;a href=&quot;http://www.opengl.org/sdk/docs/manglsl/xhtml/faceforward.xml&quot;&gt;GLSL faceforward man page&lt;/a&gt;</p>\n<p><strong>See also</strong>: &lt;a href=&quot;http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf&quot;&gt;GLSL 4.20.8 specification, section 8.5 Geometric Functions&lt;/a&gt;</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###T glm::length(T, &amp;x = P)</p>\n<p>&lt;!--\n<em>syntax: glm::length(T, &amp;x = P)</em>\n<em>name: glm::length</em>\n<em>returns: T</em>\n_returns_description: _\n<em>parameters: const vecType&lt; T, P &gt; &amp;x=P</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Returns the length of x, i.e., sqrt(x * x).</p>\n<p><strong>Type parameters:</strong></p>\n<p>genType Floating-point vector types.</p>\n<p><strong>See also</strong>: &lt;a href=&quot;http://www.opengl.org/sdk/docs/manglsl/xhtml/length.xml&quot;&gt;GLSL length man page&lt;/a&gt;</p>\n<p><strong>See also</strong>: &lt;a href=&quot;http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf&quot;&gt;GLSL 4.20.8 specification, section 8.5 Geometric Functions&lt;/a&gt;</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###vecType&lt; T, P &gt; glm::normalize(T, &amp;x = P)</p>\n<p>&lt;!--\n<em>syntax: glm::normalize(T, &amp;x = P)</em>\n<em>name: glm::normalize</em>\n<em>returns: vecType&lt; T, P &gt;</em>\n_returns_description: _\n<em>parameters: const vecType&lt; T, P &gt; &amp;x=P</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Returns a vector in the same direction as x but with length of 1.\nAccording to issue 10 GLSL 1.10 specification, if length(x) == 0 then result is undefined and generate an error.</p>\n<p><strong>See also</strong>: &lt;a href=&quot;http://www.opengl.org/sdk/docs/manglsl/xhtml/normalize.xml&quot;&gt;GLSL normalize man page&lt;/a&gt;</p>\n<p><strong>See also</strong>: &lt;a href=&quot;http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf&quot;&gt;GLSL 4.20.8 specification, section 8.5 Geometric Functions&lt;/a&gt;</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###genType glm::reflect(&amp;I, &amp;N)</p>\n<p>&lt;!--\n<em>syntax: glm::reflect(&amp;I, &amp;N)</em>\n<em>name: glm::reflect</em>\n<em>returns: genType</em>\n_returns_description: _\n<em>parameters: const genType &amp;I, const genType &amp;N</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>For the incident vector I and surface orientation N,\nreturns the reflection direction : result = I - 2.0 * dot(N, I) * N.</p>\n<p><strong>Type parameters:</strong></p>\n<p>genType Floating-point vector types.</p>\n<p><strong>See also</strong>: &lt;a href=&quot;http://www.opengl.org/sdk/docs/manglsl/xhtml/reflect.xml&quot;&gt;GLSL reflect man page&lt;/a&gt;</p>\n<p><strong>See also</strong>: &lt;a href=&quot;http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf&quot;&gt;GLSL 4.20.8 specification, section 8.5 Geometric Functions&lt;/a&gt;</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###vecType&lt; T, P &gt; glm::refract(T, &amp;I = P, T, &amp;N = P, eta)</p>\n<p>&lt;!--\n<em>syntax: glm::refract(T, &amp;I = P, T, &amp;N = P, eta)</em>\n<em>name: glm::refract</em>\n<em>returns: vecType&lt; T, P &gt;</em>\n_returns_description: _\n<em>parameters: const vecType&lt; T, P &gt; &amp;I=P, const vecType&lt; T, P &gt; &amp;N=P, T eta</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>For the incident vector I and surface normal N,\nand the ratio of indices of refraction eta,\nreturn the refraction vector.</p>\n<p><strong>Type parameters:</strong></p>\n<p>genType Floating-point vector types.</p>\n<p><strong>See also</strong>: &lt;a href=&quot;http://www.opengl.org/sdk/docs/manglsl/xhtml/refract.xml&quot;&gt;GLSL refract man page&lt;/a&gt;</p>\n<p><strong>See also</strong>: &lt;a href=&quot;http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf&quot;&gt;GLSL 4.20.8 specification, section 8.5 Geometric Functions&lt;/a&gt;</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#functions\n\n\n<!--\n_visible: True_\n_advanced: False_\n-->\n\n##Description\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::vec3 glm::cross(&x = P, &y = P)\n\n<!--\n_syntax: glm::cross(&x = P, &y = P)_\n_name: glm::cross_\n_returns: glm::vec3_\n_returns_description: _\n_parameters: const glm::vec3 &x=P, const glm::vec3 &y=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturns the cross product of x and y.\n\n\n**Type parameters:**\n\nvalType Floating-point scalar types.\n\n\n**See also**: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/cross.xml\">GLSL cross man page</a>\n\n**See also**: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.5 Geometric Functions</a>\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###T glm::distance(T, &p0 = P, T, &p1 = P)\n\n<!--\n_syntax: glm::distance(T, &p0 = P, T, &p1 = P)_\n_name: glm::distance_\n_returns: T_\n_returns_description: _\n_parameters: const vecType< T, P > &p0=P, const vecType< T, P > &p1=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturns the distance betwwen p0 and p1, i.e., length(p0 - p1).\n\n\n**Type parameters:**\n\ngenType Floating-point vector types.\n\n\n**See also**: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/distance.xml\">GLSL distance man page</a>\n\n**See also**: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.5 Geometric Functions</a>\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###T glm::dot(T, &x = P, T, &y = P)\n\n<!--\n_syntax: glm::dot(T, &x = P, T, &y = P)_\n_name: glm::dot_\n_returns: T_\n_returns_description: _\n_parameters: const vecType< T, P > &x=P, const vecType< T, P > &y=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturns the dot product of x and y, i.e., result = x * y.\n\n\n**Type parameters:**\n\ngenType Floating-point vector types.\n\n\n**See also**: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/dot.xml\">GLSL dot man page</a>\n\n**See also**: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.5 Geometric Functions</a>\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###vecType< T, P > glm::faceforward(T, &N = P, T, &I = P, T, &Nref = P)\n\n<!--\n_syntax: glm::faceforward(T, &N = P, T, &I = P, T, &Nref = P)_\n_name: glm::faceforward_\n_returns: vecType< T, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &N=P, const vecType< T, P > &I=P, const vecType< T, P > &Nref=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nIf dot(Nref, I) < 0.0, return N, otherwise, return -N.\n\n\n**Type parameters:**\n\ngenType Floating-point vector types.\n\n\n**See also**: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/faceforward.xml\">GLSL faceforward man page</a>\n\n**See also**: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.5 Geometric Functions</a>\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###T glm::length(T, &x = P)\n\n<!--\n_syntax: glm::length(T, &x = P)_\n_name: glm::length_\n_returns: T_\n_returns_description: _\n_parameters: const vecType< T, P > &x=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturns the length of x, i.e., sqrt(x * x).\n\n\n**Type parameters:**\n\ngenType Floating-point vector types.\n\n\n**See also**: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/length.xml\">GLSL length man page</a>\n\n**See also**: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.5 Geometric Functions</a>\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###vecType< T, P > glm::normalize(T, &x = P)\n\n<!--\n_syntax: glm::normalize(T, &x = P)_\n_name: glm::normalize_\n_returns: vecType< T, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &x=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturns a vector in the same direction as x but with length of 1.\nAccording to issue 10 GLSL 1.10 specification, if length(x) == 0 then result is undefined and generate an error.\n\n\n**See also**: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/normalize.xml\">GLSL normalize man page</a>\n\n**See also**: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.5 Geometric Functions</a>\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###genType glm::reflect(&I, &N)\n\n<!--\n_syntax: glm::reflect(&I, &N)_\n_name: glm::reflect_\n_returns: genType_\n_returns_description: _\n_parameters: const genType &I, const genType &N_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nFor the incident vector I and surface orientation N,\nreturns the reflection direction : result = I - 2.0 * dot(N, I) * N.\n\n\n**Type parameters:**\n\ngenType Floating-point vector types.\n\n\n**See also**: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/reflect.xml\">GLSL reflect man page</a>\n\n**See also**: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.5 Geometric Functions</a>\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###vecType< T, P > glm::refract(T, &I = P, T, &N = P, eta)\n\n<!--\n_syntax: glm::refract(T, &I = P, T, &N = P, eta)_\n_name: glm::refract_\n_returns: vecType< T, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &I=P, const vecType< T, P > &N=P, T eta_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nFor the incident vector I and surface normal N,\nand the ratio of indices of refraction eta,\nreturn the refraction vector.\n\n\n**Type parameters:**\n\ngenType Floating-point vector types.\n\n\n**See also**: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/refract.xml\">GLSL refract man page</a>\n\n**See also**: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.5 Geometric Functions</a>\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page"}