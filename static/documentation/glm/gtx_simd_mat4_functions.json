{"entry":{"name":"gtx_simd_mat4_functions","filename":"gtx_simd_mat4_functions.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/glm/gtx_simd_mat4_functions.markdown","path":"/documentation/glm/gtx_simd_mat4_functions","route":"/documentation/glm/gtx_simd_mat4_functions.markdown","dir":"../ofSite/documentation/glm","ext":"markdown","type":"page","id":346,"parent":268,"breadcrumbs":[268,1],"siblings":[],"translations":{}},"description":{},"methods":[null,{"syntax":"glm::determinant(&m)","name":"glm::determinant","returns":"float","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> detail<span class=\"token operator\">::</span>fmat4x4SIMD <span class=\"token operator\">&amp;</span>m","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Return the determinant of a mat4 matrix.\n(From GLM_GTX_simd_mat4 extension).</p>\n","desc":""},{"syntax":"glm::inverse(&m)","name":"glm::inverse","returns":"detail::fmat4x4SIMD","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> detail<span class=\"token operator\">::</span>fmat4x4SIMD <span class=\"token operator\">&amp;</span>m","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Return the inverse of a mat4 matrix.\n(From GLM_GTX_simd_mat4 extension).</p>\n","desc":""},{"syntax":"glm::mat4_cast(&x)","name":"glm::mat4_cast","returns":"glm::mat4","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> detail<span class=\"token operator\">::</span>fmat4x4SIMD <span class=\"token operator\">&amp;</span>x","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Convert a simdMat4 to a mat4.\n(From GLM_GTX_simd_mat4 extension)</p>\n","desc":""},{"syntax":"glm::matrixCompMult(&x, &y)","name":"glm::matrixCompMult","returns":"detail::fmat4x4SIMD","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> detail<span class=\"token operator\">::</span>fmat4x4SIMD <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> detail<span class=\"token operator\">::</span>fmat4x4SIMD <span class=\"token operator\">&amp;</span>y","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Multiply matrix x by matrix y component-wise, i.e.,\nresult[i][j] is the scalar product of x[i][j] and y[i][j].\n(From GLM_GTX_simd_mat4 extension).</p>\n","desc":""},{"syntax":"glm::outerProduct(&c, &r)","name":"glm::outerProduct","returns":"detail::fmat4x4SIMD","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> detail<span class=\"token operator\">::</span>fvec4SIMD <span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> detail<span class=\"token operator\">::</span>fvec4SIMD <span class=\"token operator\">&amp;</span>r","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Treats the first parameter c as a column vector\nand the second parameter r as a row vector\nand does a linear algebraic matrix multiply c * r.\n(From GLM_GTX_simd_mat4 extension).</p>\n","desc":""},{"syntax":"glm::transpose(&x)","name":"glm::transpose","returns":"detail::fmat4x4SIMD","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> detail<span class=\"token operator\">::</span>fmat4x4SIMD <span class=\"token operator\">&amp;</span>x","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Returns the transposed matrix of x\n(From GLM_GTX_simd_mat4 extension).</p>\n","desc":""},{}],"document":"<p>#functions</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>##Description</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###float glm::determinant(&amp;m)</p>\n<p>&lt;!--\n<em>syntax: glm::determinant(&amp;m)</em>\n<em>name: glm::determinant</em>\n<em>returns: float</em>\n_returns_description: _\n<em>parameters: const detail::fmat4x4SIMD &amp;m</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Return the determinant of a mat4 matrix.\n(From GLM_GTX_simd_mat4 extension).</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###detail::fmat4x4SIMD glm::inverse(&amp;m)</p>\n<p>&lt;!--\n<em>syntax: glm::inverse(&amp;m)</em>\n<em>name: glm::inverse</em>\n<em>returns: detail::fmat4x4SIMD</em>\n_returns_description: _\n<em>parameters: const detail::fmat4x4SIMD &amp;m</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Return the inverse of a mat4 matrix.\n(From GLM_GTX_simd_mat4 extension).</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###glm::mat4 glm::mat4_cast(&amp;x)</p>\n<p>&lt;!--\n<em>syntax: glm::mat4_cast(&amp;x)</em>\n<em>name: glm::mat4_cast</em>\n<em>returns: glm::mat4</em>\n_returns_description: _\n<em>parameters: const detail::fmat4x4SIMD &amp;x</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Convert a simdMat4 to a mat4.\n(From GLM_GTX_simd_mat4 extension)</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###detail::fmat4x4SIMD glm::matrixCompMult(&amp;x, &amp;y)</p>\n<p>&lt;!--\n<em>syntax: glm::matrixCompMult(&amp;x, &amp;y)</em>\n<em>name: glm::matrixCompMult</em>\n<em>returns: detail::fmat4x4SIMD</em>\n_returns_description: _\n<em>parameters: const detail::fmat4x4SIMD &amp;x, const detail::fmat4x4SIMD &amp;y</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Multiply matrix x by matrix y component-wise, i.e.,\nresult[i][j] is the scalar product of x[i][j] and y[i][j].\n(From GLM_GTX_simd_mat4 extension).</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###detail::fmat4x4SIMD glm::outerProduct(&amp;c, &amp;r)</p>\n<p>&lt;!--\n<em>syntax: glm::outerProduct(&amp;c, &amp;r)</em>\n<em>name: glm::outerProduct</em>\n<em>returns: detail::fmat4x4SIMD</em>\n_returns_description: _\n<em>parameters: const detail::fvec4SIMD &amp;c, const detail::fvec4SIMD &amp;r</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Treats the first parameter c as a column vector\nand the second parameter r as a row vector\nand does a linear algebraic matrix multiply c * r.\n(From GLM_GTX_simd_mat4 extension).</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###detail::fmat4x4SIMD glm::transpose(&amp;x)</p>\n<p>&lt;!--\n<em>syntax: glm::transpose(&amp;x)</em>\n<em>name: glm::transpose</em>\n<em>returns: detail::fmat4x4SIMD</em>\n_returns_description: _\n<em>parameters: const detail::fmat4x4SIMD &amp;x</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Returns the transposed matrix of x\n(From GLM_GTX_simd_mat4 extension).</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#functions\n\n\n<!--\n_visible: True_\n_advanced: False_\n-->\n\n##Description\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float glm::determinant(&m)\n\n<!--\n_syntax: glm::determinant(&m)_\n_name: glm::determinant_\n_returns: float_\n_returns_description: _\n_parameters: const detail::fmat4x4SIMD &m_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Return the determinant of a mat4 matrix.\n (From GLM_GTX_simd_mat4 extension).\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###detail::fmat4x4SIMD glm::inverse(&m)\n\n<!--\n_syntax: glm::inverse(&m)_\n_name: glm::inverse_\n_returns: detail::fmat4x4SIMD_\n_returns_description: _\n_parameters: const detail::fmat4x4SIMD &m_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Return the inverse of a mat4 matrix.\n (From GLM_GTX_simd_mat4 extension).\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat4 glm::mat4_cast(&x)\n\n<!--\n_syntax: glm::mat4_cast(&x)_\n_name: glm::mat4_cast_\n_returns: glm::mat4_\n_returns_description: _\n_parameters: const detail::fmat4x4SIMD &x_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Convert a simdMat4 to a mat4.\n (From GLM_GTX_simd_mat4 extension)\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###detail::fmat4x4SIMD glm::matrixCompMult(&x, &y)\n\n<!--\n_syntax: glm::matrixCompMult(&x, &y)_\n_name: glm::matrixCompMult_\n_returns: detail::fmat4x4SIMD_\n_returns_description: _\n_parameters: const detail::fmat4x4SIMD &x, const detail::fmat4x4SIMD &y_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Multiply matrix x by matrix y component-wise, i.e.,\n result[i][j] is the scalar product of x[i][j] and y[i][j].\n (From GLM_GTX_simd_mat4 extension).\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###detail::fmat4x4SIMD glm::outerProduct(&c, &r)\n\n<!--\n_syntax: glm::outerProduct(&c, &r)_\n_name: glm::outerProduct_\n_returns: detail::fmat4x4SIMD_\n_returns_description: _\n_parameters: const detail::fvec4SIMD &c, const detail::fvec4SIMD &r_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Treats the first parameter c as a column vector\n and the second parameter r as a row vector\n and does a linear algebraic matrix multiply c * r.\n (From GLM_GTX_simd_mat4 extension).\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###detail::fmat4x4SIMD glm::transpose(&x)\n\n<!--\n_syntax: glm::transpose(&x)_\n_name: glm::transpose_\n_returns: detail::fmat4x4SIMD_\n_returns_description: _\n_parameters: const detail::fmat4x4SIMD &x_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Returns the transposed matrix of x\n (From GLM_GTX_simd_mat4 extension).\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page"}